version: 2
jobs:
  python:
    docker:
      - image: cimg/python:3.10.12
      - image: rabbitmq:3.8.19-management
      - image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
        environment:
          discovery.type: single-node
          ES_JAVA_OPTS: -Xms512m -Xmx512m
      - image: mysql:5.7.34
        environment:
          MYSQL_USER: airone
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: airone
        command:
          [
            --character-set-server=utf8,
            --collation-server=utf8_general_ci,
            --default-storage-engine=innodb,
          ]
    environment:
      TOXENV: "python"
    steps:
      - checkout
      - run:
          name: Wait for ElasticSearch
          command: dockerize -wait tcp://127.0.0.1:9200 -timeout 120s
      - restore_cache:
          key: python-{{ checksum "poetry.lock" }}-{{ checksum "tox.ini" }}-20220708
      - run:
          name: Install tox tox-pyenv
          command: |
            python3 -m venv virtualenv
            . virtualenv/bin/activate
            pip install --upgrade pip
            pip install tox
      - run:
          name: Wait for MySQL is available
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Grant permission for airone user to be able to manipulate multiple databases (airone and test_airone)
          command: |
            sudo apt-get update
            sudo apt-get install -y default-mysql-client
            mysql -uroot -h127.0.0.1 -ppassword -e "GRANT ALL ON *.* to airone@'%' IDENTIFIED BY 'password'"
      - run:
          name: Install additional dependencies
          command: |
            sudo apt-get install -y libldap2-dev libsasl2-dev libxmlsec1-dev
      - run:
          name: Testing
          command: |
            . virtualenv/bin/activate
            tox
      - save_cache:
          key: python-{{ checksum "poetry.lock" }}-{{ checksum "tox.ini" }}-20220708
          paths:
            - virtualenv
            - .tox/python
      - run:
          name: Coverage
          command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            ./codecov -t ${CODECOV_TOKEN}

workflows:
  version: 2
  build_and_test:
    jobs:
      - python
